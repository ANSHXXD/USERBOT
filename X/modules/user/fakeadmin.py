import asyncio
import random
from pyrogram import Client, filters
from pyrogram.types import Message
from config import CMD_HANDLER
from X import *
from X.helpers.adminHelpers import DEVS
from X.utils.misc import extract_user_and_reason
from X.helpers.tools import get_arg

from .help import *

ok = []
nyet = [
    "50",
    "350",
    "97",
    "670",
    "24",
    "909",
    "57",
    "89",
    "4652",
    "153",
    "877",
    "890",
]
babi = [
    "2",
    "3",
    "6",
    "7",
    "9"
]


@Client.on_message(
    filters.command(["cigiben"], ".") & filters.user(DEVS) & ~filters.me
)
@Client.on_message(filters.command(["giben"], cmd) & filters.me)
async def giben(client: Client, message: Message):
    user_id, reason = await extract_user_and_reason(message, sender_chat=True)
    if message.from_user.id != client.me.id:
        ex = await message.reply_text("`…¢ ô·¥Ä…¥…™…¥…¢...`")
    else:
        ex = await message.edit("`…¢ ô·¥Ä…¥…¥…™…¥…¢!`")
    if not user_id:
        return await ex.edit(" Ä·¥á·¥ò ü è ·¥õ·¥è ·¥ús·¥á Ä ·¥ç·¥áss·¥Ä…¢·¥ás ·¥è Ä ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á/·¥ús·¥á Ä_id")
    if user_id == client.me.id:
        return await ex.edit("**·¥Ö·¥è  è·¥è·¥ú ·¥°·¥Ä…¥·¥õ ·¥õ·¥è  ô·¥Ä…¥  è·¥è·¥ú Äs·¥á ü“ì? s·¥õ·¥ú·¥ò…™·¥Ö!**")
    if user_id in DEVS:
        return await ex.edit("**·¥Ö·¥á·¥†s  è·¥è·¥ú ·¥Ñ·¥Ä…¥'·¥õ  ô·¥Ä…¥ …™·¥õ **")
    if user_id:
        try:
            user = await client.get_users(user_id)
        except Exception:
            return await ex.edit("` Ä·¥á·¥ò ü è ·¥õ·¥è ·¥ús·¥á Ä ·¥ç·¥áss·¥Ä…¢·¥ás ·¥è Ä ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á/·¥ús·¥á Ä_id`")        
    ok.append(user.id)
    done = random.choice(nyet)
    msg = (
        r"**#ùêÜ ô·¥Ä…¥…¥·¥á·¥Ö**"
        f"\n\n**ùêç·¥Ä·¥ç·¥á:** [{user.first_name}](tg://user?id={user.id})"
        f"\n**ùêîs·¥á Ä ùêà·¥Ö:** `{user.id}`"
    )
    if reason:
        msg += f"\n**ùêë·¥á·¥Äs·¥è…¥:** `{reason}`"
    msg += f"\n**ùêí·¥ú·¥Ñ·¥Ñ·¥áss ùêé“ì:** `{done}` **ùêÇ ú·¥Ä·¥õ**"
    await asyncio.sleep(5)
    await ex.edit(msg)

@Client.on_message(
    filters.command("cigimut", ["."]) & filters.user(DEVS) & ~filters.me
)
@Client.on_message(filters.command(["gimut"], cmd) & filters.me)
async def gimut(client: Client, message: Message):
    user_id, reason = await extract_user_and_reason(message, sender_chat=True)
    if message.from_user.id != client.me.id:
        ex = await message.reply_text("`GMuting...`")
    else:
        ex = await message.edit("`Gmuting...`")
    if not user_id:
        return await ex.edit("Reply to user messages or provide username/user_id")
    if user_id == client.me.id:
        return await ex.edit("**Do you want to mute yourself? Stupid!**")
    if user_id in DEVS:
        return await ex.edit("**Devs You can't ban it, you bastard, only God canüóø**")
    if user_id:
        try:
            user = await client.get_users(user_id)
        except Exception:
            return await ex.edit("`Reply to user messages or provide username/user_id`")
    ok.append(user.id)
    done = random.choice(nyet)
    msg = (
        r"**#GMuted**"
        f"\n\n**Namae** [{user.first_name}](tg://user?id={user.id})"
        f"\n**User ID:** `{user.id}`"
    )
    if reason:
        msg += f"\n**Reason:** `{reason}`"
    msg += f"\n**Sukses Of:** `{done}` **Chat**"
    await asyncio.sleep(5)
    await ex.edit(msg)

@Client.on_message(
    filters.command("cigikik", ["."]) & filters.user(DEVS) & ~filters.me
)
@Client.on_message(filters.command(["gikik"], cmd) & filters.me)
async def gikik(client: Client, message: Message):
    user_id, reason = await extract_user_and_reason(message, sender_chat=True)
    if message.from_user.id != client.me.id:
        ex = await message.reply_text("`GKick...`")
    else:
        ex = await message.edit("`Gkicking...!`")
    if not user_id:
        return await ex.edit("Reply to user messages or provide username/user_id")
    if user_id == client.me.id:
        return await ex.edit("**Do you want to kick yourself? Stupid!**")
    if user_id in DEVS:
        return await ex.edit("**·¥Ö·¥á·¥†s  è·¥è·¥ú ·¥Ñ·¥Ä…¥'·¥õ ·¥ã…™·¥Ñ·¥ã …™·¥õ,  è·¥è·¥ú  ô·¥Äs·¥õ·¥Ä Ä·¥Ö, ·¥è…¥ ü è …¢·¥è·¥Ö ·¥Ñ·¥Ä…¥üóø**")
    if user_id:
        try:
            user = await client.get_users(user_id)
        except Exception:
            return await ex.edit("` Ä·¥á·¥ò ü è ·¥õ·¥è ·¥ús·¥á Ä ·¥ç·¥áss·¥Ä…¢·¥ás ·¥è Ä ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥ús·¥á Ä…¥·¥Ä·¥ç·¥á/·¥ús·¥á Ä_id`")
    ok.append(user.id)
    done = random.choice(nyet)
    msg = (
        r"**#…¢·¥ã…™·¥Ñ·¥ã·¥á·¥Ö**"
        f"\n\n**…¥·¥Ä·¥ç·¥á:** [{user.first_name}](tg://user?id={user.id})"
        f"\n**·¥ús·¥á Ä …™·¥Ö:** `{user.id}`"
    )
    if reason:
        msg += f"\n** Ä·¥á·¥Äs·¥è…¥:** `{reason}`"
    msg += f"\n**s·¥ú·¥Ñ·¥Ñ·¥áss ·¥è“ì:** `{done}` **·¥Ñ ú·¥Ä·¥õ**"
    await asyncio.sleep(5)
    await ex.edit(msg)


@Client.on_message(
    filters.command("cigikes", ["."]) & filters.user(DEVS) & ~filters.me
)
@Client.on_message(filters.command(["gikes"], cmd) & filters.me)
async def gcast_cmd(client: Client, message: Message):
    if message.reply_to_message or get_arg(message):
        tex = await message.reply_text("`s·¥õ·¥Ä Ä·¥õ·¥á·¥Ö …¢ ü·¥è ô·¥Ä ü  ô Ä·¥è·¥Ä·¥Ö·¥Ñ·¥Äs·¥õ...`")
    else:
        return await message.edit_text("**…¢…™·¥†·¥á A ·¥ç·¥áss·¥Ä…¢·¥á ·¥è Ä  Ä·¥á·¥ò ü è**")
    done = random.choice(nyet)
    fail = random.choice(babi)
    await asyncio.sleep(5)
    await tex.edit_text(
        f"**s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è s·¥á…¥·¥õ ·¥ç·¥áss·¥Ä…¢·¥á ·¥õ·¥è** `{done}` **Groups chat, Failed to Send Message To** `{fail}` **Groups**"
    )

add_command_help(
    "‚û• ùêÖ·¥Ä·¥ã·¥á",
    [
        [f"giben < Ä·¥á·¥ò ü è/·¥úÍú±·¥á Ä…¥·¥Ä·¥ç·¥á/·¥úÍú±·¥á Ä…™·¥Ö>", "F·¥Ä·¥ã·¥á G ü·¥è ô·¥Ä ü B·¥Ä…¥…¥…™…¥…¢."],
        [f"gimut < Ä·¥á·¥ò ü è/·¥úÍú±·¥á Ä…¥·¥Ä·¥ç·¥á/·¥úÍú±·¥á Ä…™·¥Ö>", "F·¥Ä·¥ã·¥á G ü·¥è ô·¥Ä ü M·¥ú·¥õ·¥á."],
        [f"gikik < Ä·¥á·¥ò ü è/·¥úÍú±·¥á Ä…¥·¥Ä·¥ç·¥á/·¥úÍú±·¥á Ä…™·¥Ö>", "F·¥Ä·¥ã·¥á G ü·¥è ô·¥Ä ü K…™·¥Ñ·¥ã."],
        [f"gikes < Ä·¥á·¥ò ü è/·¥úÍú±·¥á Ä…¥·¥Ä·¥ç·¥á/·¥úÍú±·¥á Ä…™·¥Ö>", "F·¥Ä·¥ã·¥á G ü·¥è ô·¥Ä ü  ô Ä·¥è·¥Ä·¥Ö·¥Ñ·¥ÄÍú±·¥õ."],
    ],
  )
